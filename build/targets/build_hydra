#!/bin/bash
set -e
set -x
set -o pipefail

. "${GITHUB_WORKSPACE}/build/common_lib.sh"
. "${GITHUB_WORKSPACE}/build/build_lib.sh"
. "${GITHUB_WORKSPACE}/build/libs/build_zlib.sh"
. "${GITHUB_WORKSPACE}/build/libs/build_openssl.sh"
. "${GITHUB_WORKSPACE}/build/libs/build_libssh.sh"
. "${GITHUB_WORKSPACE}/build/libs/build_libidn.sh"
. "${GITHUB_WORKSPACE}/build/libs/build_pcre.sh"
#. "${GITHUB_WORKSPACE}/build/libs/build_libgpg-error.sh"
#. "${GITHUB_WORKSPACE}/build/libs/build_libgcrypt.sh"
. "${GITHUB_WORKSPACE}/build/libs/build_ncurses.sh"
#. "${GITHUB_WORKSPACE}/build/libs/build_libmemcached.sh"
#. "${GITHUB_WORKSPACE}/build/libs/build_postgresql.sh"
. "${GITHUB_WORKSPACE}/build/libs/build_libusb.sh"
. "${GITHUB_WORKSPACE}/build/libs/build_freerdp.sh"

# Hydra requires a lot of hacking in ./configure, every new version should be checked for compatibility very carefully!
# Version 9.2 builds successfully, 9.0 fails, other versions were not tested.
HYDRA_VERSION='9.2'
HYDRA_URL="https://github.com/vanhauser-thc/thc-hydra/archive/refs/tags/v${HYDRA_VERSION}.tar.gz"
HYDRA_BUILD_DIR="${BUILD_DIRECTORY}/hydra"


build_hydra() (
  curl -sLo 'hydra.tar.gz' "${HYDRA_URL}"
  common::extract 'hydra.tar.gz' "${HYDRA_BUILD_DIR}"
  common::safe_cd "${HYDRA_BUILD_DIR}"

  # Hydra's ./configure does not accept custom lib paths except for openssl (and even openssl option is buggy).
  #   Although, it will look in $PREFIX/{include,lib} ($PREFIX is install prefix, set up with --prefix=).
  #   Sadly, it fails to detects some libraries installed there.
  #   Moreover, $PREFIX/{include,lib} comes AFTER system dirs, which almost guarantees cross-compilation fail.
  #   Thus, we will have to edit ./configure manually (and better - file a pull request with custom lib path options).
  #   For some libs there are convenient *LIBNAME*_PATH variables, we can (ab)use them.
  # Examples:
  #   sed -i '/^SSL_IPATH=""/s:SSL_IPATH="":SSL_IPATH="'"${OPENSSL_DIR}/include"'":' configure
  #   sed -i '/^SSL_PATH=""/s:SSL_PATH="":SSL_PATH="'"${OPENSSL_DIR}/lib"'":' configure
  #   sed -i '/^CRYPTO_PATH=""/s:CRYPTO_PATH="":CRYPTO_PATH="'"${OPENSSL_DIR}/lib"'":' configure
  # NOTE: These hacks are tested and should work, although paths are still appended AFTER system directories.
  # NOTE: If openssl is not found in system paths ($INCDIRS), it is considered outdated by ./configure.
  # Because of these drawbacks, it's better to insert all libs to INCDIRS/LIBDIRS.

  # First, prepend lib paths to the list of system lib dirs.
  # As a result, they will be detected (=> enabling some macros and stuff), but not passed to CPP/LD yet.
  # WARNING: will perform multiple insertions if multiple lines like ^INCDIRS=" are present.
  sed -i '/^INCDIRS="/a INCDIRS="$HYDRA_ADDITIONAL_INCLUDE_DIRS $INCDIRS"' configure
  sed -i '/^LIBDIRS="/a LIBDIRS="$HYDRA_ADDITIONAL_LIB_DIRS $LIBDIRS"' configure

  # Second, add them to CPP/LD flags.
  sed -i '/^echo "Writing Makefile\.in \.\.\."/i XIPATHS="$HYDRA_ADDITIONAL_CPP_DIRS_OPTS $XIPATHS"' configure
  sed -i '/^echo "Writing Makefile\.in \.\.\."/i XLIBPATHS="$HYDRA_ADDITIONAL_LD_DIRS_OPTS $XLIBPATHS"' configure


  # Finally, pass the libraries.
  include_dirs="${ZLIB_DIR}/include "
  include_dirs+="${OPENSSL_DIR}/include "
  include_dirs+="${LIBSSH_DIR}/include "
  include_dirs+="${LIBIDN_DIR}/include "
  include_dirs+="${PCRE_DIR}/include "
  include_dirs+="${NCURSES_DIR}/include "
  include_dirs+="${LIBMEMCACHED_DIR}/include "
  include_dirs+="${FREERDP_DIR}/include "

  lib_dirs="${ZLIB_DIR}/lib "
  lib_dirs+="${OPENSSL_DIR}/lib "
  lib_dirs+="${LIBSSH_DIR}/lib "
  lib_dirs+="${LIBSSH_DIR}/lib64 "
  lib_dirs+="${LIBIDN_DIR}/lib "
  lib_dirs+="${PCRE_DIR}/lib "
  lib_dirs+="${LIBMEMCACHED_DIR}/lib "
  lib_dirs+="${FREERDP_DIR}/lib "
  lib_dirs+="${FREERDP_DIR}/lib64 "

  # Implies that there are no spaces in paths (it's OK, hydra implies the same).
  cpp_opts=""
  for include_dir in $include_dirs; do
    cpp_opts+="-I${include_dir} "
  done

  ld_opts=""
  for lib_dir in $lib_dirs; do
    ld_opts+="-L${lib_dir} "
  done

  # In the final giant cc command for linking -lcrypto and -lssl come BEFORE
  #   -lfreerdp2 and -lwinpr2 which leads to linking errors.
  #   To fix them, we need to add -lcrypto and -lssl AFTER -lfreerdp2 and -lwinpr2.
  sed -i '/^echo "Writing Makefile\.in \.\.\."/i XLIBS="$XLIBS -lcrypto -lssl"' configure

  
  CFLAGS="${GCC_OPTS}" \
    CXXFLAGS="${GXX_OPTS}" \
    HYDRA_ADDITIONAL_INCLUDE_DIRS="${include_dirs}" \
    HYDRA_ADDITIONAL_LIB_DIRS="${lib_dirs}" \
    HYDRA_ADDITIONAL_CPP_DIRS_OPTS="${cpp_opts}" \
    HYDRA_ADDITIONAL_LD_DIRS_OPTS="${ld_opts}" \
    ./configure \
      --host="$(build::get_host_triplet)" \
      --disable-dependency-tracking \
      --prefix="${HYDRA_DEPS_DIR}" \
      --disable-xhydra
    # --debug - nice option!
  make LDFLAGS="-static" -j"$(nproc)"
  strip hydra
)

# Hydra has a lot of dependencies for extra features.
# I tried to include every possible dependency, but it is impossible to build/get static versions of some:
# LIB                 | PURPOSE               | COMMENT
# --------------------|-----------------------|----------------------------------------------------
# libgtk2.0           | GUI support (xhydra)  | Haven't tried to add yet.
# libsvn              | SVN support           | Haven't tried to add yet.
# libmysqlclient      | MySQL support         | Massive, didn't test for portability.
# libpq               | PostgreSQL support    | Impossible to add (doesn't support static builds).
# <can't remember>    | Oracle DB support     | Impossible to add (no static version - closed source, only dynamic libs).
# <can't remember>    | Firebird support      | Impossible to add.
# libsmbclient        | SMB support           | Impossible to add (samba does not support static builds).
main() (
  if [ "$#" -ne 1 ]; then
    echo "Usage: ${0} <arch>"
    echo "Example: ${0} x86-64"
    exit 1
  fi
 
  build::init "$1"

  build_zlib
  build_openssl
  build_libssh
  build_libidn
  build_pcre
    # For some reason gcrypt fails to link
    # build_libgpgerror
    # build_libgcrypt
  build_ncurses
    # linking is successful but memcached is not available
    # build_libmemcached
    # build_postgresql
  build_libusb
  # freerdp fails to cross-compile for now.
  if [ "${CURRENT_ARCH}" == "x86" ] || [ "${CURRENT_ARCH}" == "x86-64" ]; then
    build_freerdp
  fi

  build_hydra

  cp "${HYDRA_BUILD_DIR}/hydra" "${OUTPUT_DIRECTORY}/hydra-${HYDRA_VERSION}"
  echo "[+] Finished building hydra for ${CURRENT_ARCH}"

  echo ::set-output name=PACKAGED_NAME::"hydra-${HYDRA_VERSION}-${CURRENT_ARCH}"
  echo ::set-output name=PACKAGED_NAME_PATH::"${OUTPUT_DIRECTORY}/*"
)

main "$@"
